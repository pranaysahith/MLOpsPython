# CI/PR Pipeline that deploys an TF template to create or update the resources needed by the other pipelines.
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - environment_setup/tf-templates/*
pr:
  branches:
    include:
    - master
  paths:
    include:
    - environment_setup/tf-templates/*

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: devopsforai-aml-vg


stages:
  - stage: Plan
    jobs:
      - job: Plan_deployment
        steps:
          - script: | 
              wget -q https://releases.hashicorp.com/terraform/${tf_version}/terraform_${tf_version}_linux_amd64.zip
              unzip terraform_${tf_version}_linux_amd64.zip
              echo $PATH
              pwd && ls -l 
              mkdir bin && mv terraform bin/ && export PATH="$PATH:$(pwd)/bin" && echo $PATH
              rm terraform_${tf_version}_linux_amd64.zip
              terraform version
            displayName: Install Terraform
            env:
              tf_version: 0.12.28
            
          - task: AzureCLI@2
            displayName: 'Terraform init'
            inputs:
              azureSubscription: mlops_connection
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                cd environment_setup/tf-templates
                terraform init -backend-config=resource_group_name=${rg_name} -backend-config=storage_account_name=${sta_name} -backend-config=container_name=${container_name} -backend-config=key=${key_name}
                terraform workspace select $workspace_name | terraform workspace new $workspace_name
              addSpnToEnvironment: true
            env:
              workspace_name: dev
              rg_name: explore
              sta_name: terraformmlops01
              container_name: tfstate
              key_name: mlops.state

          - script: |
              terraform init -backend-config=resource_group_name=${rg_name} -backend-config=storage_account_name=${sta_name} -backend-config=container_name=${container_name} -backend-config=key=${key_name}
              terraform workspace select $workspace_name | terraform workspace new $workspace_name
            displayName: Initialize Terraform
            workingDirectory: $(build.sourcesDirectory)/environment_setup/tf-templates
            enabled: false
            env:
              workspace_name: dev
              rg_name: explore
              sta_name: terraformmlops01
              container_name: tfstate
              key_name: mlops.state

